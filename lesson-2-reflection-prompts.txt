What happens when you initialize a repository? Why do you need to do it?

A folder .git is created telling git that the current folder is  git repository.
All files and subdirectories are potentially part of the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The working directory is a plain directory with files tracked by git but also with files
not being part of the repository. Staging area is an intermediate area between the working
directory and the repository. It allows us to pick certain files which go into the next commit.
This mechanism faciliates our aim to separate logical changes in different commits.

How can you use the staging area to make sure you have one commit per logical
change?

In case I have changed two files and each logical change is restricted to a single files, I can
first commit one file and than the second file. This would not be possible without the staging
area.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

A very common use-case of branches is a development branch for a specific feature. The master
branch can still be in production. We develop happily on the development branch without effecting the
production version. At some point we merge both branch into a new production version.

How do the diagrams help visualize the branch structure?

One can easily understand which commit belongs to which branch and also understand which
commits are reachable and which not.


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

The result of a merge of two branches is a new commit including all the changes made
in the last commit of each branch with respect to last commit where both branches were still together.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

Git includes lines present in one file but not in the other and does not include lines which were
deleted in both files. This is the only automatic procedure. Any other merge conflict (i.e. differences betwenn files)
has to be resolved manually. 
